// Common Build file for Generic Table 

plugins {
	id 'application'
  	id 'eclipse'
  	
    	id 'org.openjfx.javafxplugin' version '0.1.0' apply false
	//https://github.com/johnrengelman/shadow
	// for creating fat jar.
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

apply plugin: 'java'
apply plugin: 'eclipse'

ext.jdkver = 21
ext.jarName = "tableApp"	
	
project.version = '1.3.0.0'

ext.currentOS = org.gradle.internal.os.OperatingSystem.current()
ext.arch = System.getProperty("os.arch").toLowerCase(Locale.ENGLISH)						

repositories {
    // Use 'mavenCentral' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
}	
	 
	
sourceSets {
        main {
                java {
		     srcDirs= ["src/main/java"]
                     exclude '**/ignorecompile/**'
		     
		     if (project.ext.jdkver == 1.8) {
			exclude 'module-info.java'
		     }

		     destinationDirectory.set(file("${buildDir}/classes"))
                }
		
                resources {
                        srcDirs= ["src/main/java/"]
                }
        }
}

if (jdkver == 11) {
    apply plugin:  'org.openjfx.javafxplugin' 
	javafx {
    	modules = [ 'javafx.controls','javafx.fxml' ]

    	version = "11.0.2"
	}
}

if (jdkver == 17) {
    apply plugin:  'org.openjfx.javafxplugin' 
	javafx {
    	modules = [ 'javafx.controls','javafx.fxml' ]

    	version = "17.0.2"
	}
}

if (jdkver == 21) {
   	apply plugin:  'org.openjfx.javafxplugin'
	javafx {
    	       modules = [ 'javafx.controls','javafx.fxml' ]

	       // 	mac os 10.x doesnt support javafx version 21.
	       //	so use 17.0.2 instead
	       version = (currentOS.isMacOsX() && arch == 'x86_64') ? "17.0.2" : "21.0.5"
	}
} 

compileJava {
    sourceCompatibility = jdkver
    targetCompatibility = jdkver
    options.fork = true
}

// Dependencies
dependencies {
    // controlsfx & jfoenix         
    if (jdkver == 1.8) { 
        implementation group: 'org.controlsfx', name: 'controlsfx', version: '8.40.18'
    } else if (jdkver >= 11) { 
        implementation group: 'org.controlsfx', name: 'controlsfx', version: '11.2.0'
    }
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
}


mainClassName = 'tableapp.Main'


task copyJars (type: Copy) {
    def fromDir = "build/libs/"
    def toDir = "./"
    include jarName
 
    // copy jars to lib folder:
    from fromDir
    into toDir
}
 
tasks.withType(JavaCompile) {
    options.warnings = false
}

build.dependsOn copyJars

jar {

     manifest {
        attributes (
        'Main-Class': 'tableapp.Main',
        )
        
     }

   exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

shadowJar {
   	archiveBaseName.set(jarName)
   	archiveClassifier.set('')
   	archiveVersion.set('')
 	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA','META-INF/LICENSE*','META-INF/NOTICE*'	
}

// copy the final jar file into the root directory
task copyJar(type: Copy) {
	dependsOn(shadowJar)
    from shadowJar // here it automatically reads jar file produced from jar task
    def toDir = project.projectDir
    
    into toDir
}

build.finalizedBy copyJar
assemble.finalizedBy copyJar
